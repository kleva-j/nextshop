/* tailwind.css
   Don't import tailwind's base to avoid potential conflicts with reset styles

*/

/* @tailwind base; */

.static {
  position: static
}

.relative {
  position: relative
}

.block {
  display: block
}

.inline-flex {
  display: inline-flex
}

.grid {
  display: grid
}

.hidden {
  display: none
}

.h-10 {
  height: 2.5rem
}

.h-11 {
  height: 2.75rem
}

.h-9 {
  height: 2.25rem
}

.w-10 {
  width: 2.5rem
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.items-center {
  align-items: center
}

.justify-center {
  justify-content: center
}

.whitespace-nowrap {
  white-space: nowrap
}

.rounded-md {
  border-radius: calc(var(--radius) - 2px)
}

.border {
  border-width: 1px
}

.border-input {
  border-color: hsl(var(--input))
}

.border-slate-300 {
  --tw-border-opacity: 1;
  border-color: rgb(203 213 225 / var(--tw-border-opacity))
}

.bg-background {
  background-color: hsl(var(--background))
}

.bg-destructive {
  background-color: hsl(var(--destructive))
}

.bg-primary {
  background-color: hsl(var(--primary))
}

.bg-secondary {
  background-color: hsl(var(--secondary))
}

.bg-transparent {
  background-color: transparent
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem
}

.px-8 {
  padding-left: 2rem;
  padding-right: 2rem
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem
}

.font-medium {
  font-weight: 500
}

.italic {
  font-style: italic
}

.text-destructive-foreground {
  color: hsl(var(--destructive-foreground))
}

.text-primary {
  color: hsl(var(--primary))
}

.text-primary-foreground {
  color: hsl(var(--primary-foreground))
}

.text-secondary-foreground {
  color: hsl(var(--secondary-foreground))
}

.text-slate-400 {
  --tw-text-opacity: 1;
  color: rgb(148 163 184 / var(--tw-text-opacity))
}

.underline {
  text-decoration-line: underline
}

.line-through {
  text-decoration-line: line-through
}

.underline-offset-4 {
  text-underline-offset: 4px
}

.outline {
  outline-style: solid
}

.ring-offset-background {
  --tw-ring-offset-color: hsl(var(--background))
}

.invert {
  --tw-invert: invert(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)
}

.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms
}

@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0))
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0))
  }
}

.running {
  animation-play-state: running
}

.hover\:bg-accent:hover {
  background-color: hsl(var(--accent))
}

.hover\:bg-destructive\/90:hover {
  background-color: hsl(var(--destructive) / 0.9)
}

.hover\:bg-primary\/90:hover {
  background-color: hsl(var(--primary) / 0.9)
}

.hover\:bg-secondary\/80:hover {
  background-color: hsl(var(--secondary) / 0.8)
}

.hover\:text-accent-foreground:hover {
  color: hsl(var(--accent-foreground))
}

.hover\:underline:hover {
  text-decoration-line: underline
}

.focus-visible\:outline-none:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px
}

.focus-visible\:ring-2:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)
}

.focus-visible\:ring-ring:focus-visible {
  --tw-ring-color: hsl(var(--ring))
}

.focus-visible\:ring-offset-2:focus-visible {
  --tw-ring-offset-width: 2px
}

.disabled\:pointer-events-none:disabled {
  pointer-events: none
}

.disabled\:opacity-50:disabled {
  opacity: 0.5
}
